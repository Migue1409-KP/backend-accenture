plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'co.accenture'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // WebFlux + R2DBC
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.postgresql:r2dbc-postgresql:1.0.7.RELEASE'

    // Validaci√≥n
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Flyway Core + PostgreSQL support
    implementation 'org.flywaydb:flyway-core:11.8.2'
    implementation 'org.flywaydb:flyway-database-postgresql:11.8.2'

    // JDBC (necesario para Flyway)
    implementation 'org.springframework:spring-jdbc'
    runtimeOnly   'org.postgresql:postgresql:42.6.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // DevTools y Docker Compose
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Testing
    testImplementation     'org.springframework.boot:spring-boot-starter-test'
    testImplementation     'io.projectreactor:reactor-test'
    testRuntimeOnly        'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
